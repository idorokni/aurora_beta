<UserControl x:Class="Aurora.Client.WpfApplication.MVVM.View.DefaultInsideHomeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Aurora.Client.WpfApplication.MVVM.View" 
             xmlns:userControl="clr-namespace:Aurora.Client.WpfApplication.UserControls" xmlns:viewmodel="clr-namespace:Aurora.Client.WpfApplication.MVVM.ViewModel"
             d:DataContext="{d:DesignInstance Type=viewmodel:DefaultInsideHomeViewModel}"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="480">
    <UserControl.Resources>
        <!-- Easing Functions -->
        <QuadraticEase x:Key="EaseOut" EasingMode="EaseOut"/>
        <QuadraticEase x:Key="EaseIn" EasingMode="EaseIn"/>
        <ElasticEase x:Key="ElasticEaseInOut" EasingMode="EaseInOut" Oscillations="3" Springiness="2"/>
        <BounceEase x:Key="BounceEase" EasingMode="EaseOut" Bounces="3" Bounciness="2"/>

        <!-- Button Style -->
        <Style x:Key="AnimatedButtonStyle" TargetType="Button">
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="Transparent"/>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <TransformGroup>
                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                        <TranslateTransform X="0" Y="0"/>
                        <RotateTransform Angle="0"/>
                    </TransformGroup>
                </Setter.Value>
            </Setter>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <!-- Hover Animation: Scale effect -->
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                         To="1.1" Duration="0:0:0.3" EasingFunction="{StaticResource EaseOut}"/>
                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                         To="1.1" Duration="0:0:0.3" EasingFunction="{StaticResource EaseOut}"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                         To="1" Duration="0:0:0.3" EasingFunction="{StaticResource EaseIn}"/>
                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                         To="1" Duration="0:0:0.3" EasingFunction="{StaticResource EaseIn}"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="92*"/>
            <RowDefinition Height="133*"/>
        </Grid.RowDefinitions>
        <Canvas Background="#f3f4f6" Grid.RowSpan="2">
            <Polygon Points="0,20 230,140 0,270" Fill="#E7E7E7"/>
            <Polygon Points="480,450 230,350 480,250" Fill="#E7E7E7"/>
        </Canvas>
        <Border Grid.RowSpan="2">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="35"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="30"/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="30"/>
                    </Grid.ColumnDefinitions>
                    <Button Style="{StaticResource AnimatedButtonStyle}"
                            Command="{Binding SwipeLeftRelayCommand}">
                        <Canvas Width="24" Height="24">
                            <!-- Arrowhead -->
                            <Path Stroke="#5CA4A9" StrokeThickness="2" StrokeLineJoin="Round"
          Data="M12,19 L5,12 L12,5" />

                            <!-- Horizontal line -->
                            <Path Stroke="#5CA4A9" StrokeThickness="2" StrokeLineJoin="Round"
          Data="M19,12 H5" />
                        </Canvas>
                    </Button>
                    <Button Grid.Column="1"
                            Style="{StaticResource MainOptionButton}" Margin="5 5 0 5"
                            Command="{Binding GetRecentPostsCommand}">
                        <TextBlock Text="For You"
                                   Foreground="#4B5563"
                                   FontSize="15"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Center"/>
                    </Button>
                    <Button Style="{StaticResource MainOptionButton}" 
                            Margin="0 5 5 5"
                            Grid.Column="2"
                            Command="{Binding GetFollowingPostsCommand}">
                        <TextBlock Text="Following"
                                   Foreground="#4B5563"
                                   FontSize="15"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Center"/>
                    </Button>
                    <Button Grid.Column="3"
                            Style="{StaticResource AnimatedButtonStyle}"
                            Command="{Binding SwipeRightRelayCommand}">
                        <Canvas Width="24" Height="24">
                            <!-- Horizontal line -->
                            <Path Stroke="#5CA4A9" StrokeThickness="2" StrokeLineJoin="Round"
          Data="M5,12 H19" />

                            <!-- Arrowhead -->
                            <Path Stroke="#5CA4A9" StrokeThickness="2" StrokeLineJoin="Round"
          Data="M12,5 L19,12 L12,19" />
                        </Canvas>
                    </Button>
                </Grid>
                <Border CornerRadius="20"
                        Grid.Row="1">
                    <Button
                        Style="{StaticResource AnimatedButtonStyle}"
                        Margin="20"
                        Command="{Binding DefaultViewPostCommand}">
                        <Button.Background>
                            <ImageBrush ImageSource="{Binding MainPost.Image}" Stretch="Fill"/>
                        </Button.Background>
                    </Button>
                </Border>
            </Grid>
        </Border>
    </Grid>
</UserControl>
